객체 = 클라스
속성 = 변수 (파란색 글씨)(클라스 안에 위치)
			 (메소드 안의 변수는 속성이 아니다.)
			 (자주색글씨, 메소드 안에 있는 변수는 지역변수 이다.)
			 (지역변수 안의 지역변수는 행위할 떄 나타 났다 행위가 끝나면 없어지기
			  때문에 속성이라고 하지않는다. 속성은 객체와 운명을 같이 한다. 그점이 다름)




class Apple{
  int price;
  Apple(int a){       //=======이렇게 해도 되지만 밑에서 Apple() 괄호안이 무엇인지 알기 힘들다. 
      a = price;
  Apple(int price){   //======이렇게 하면 값이 Apple()의 값이 0 이 나온다. 
      price = price;
      
      }
  }
  public class Study {
    public static void main(String[] args){
      Apple a1 = new Apple(500);//price<-500
      System.out.println(a1.price);
      Apple a2 = new Apple(1000);//price<-1000
      
      
      
      그러므로 
      
     1. 프로그램의 목적 : 데이터 처리
      2. this 제어자의 의미 : 현재의 인스턴스 (현재의 객체 )
      
  class Apple{
    int price;
    Apple(int price){   
      this.price = price; //=======this를 넣어준다. 
      
      }
  }
  public class Study {
    public static void main(String[] args){
      Apple a1 = new Apple(500);//price<-500
      System.out.println(a1.price);
      Apple a2 = new Apple(1000);//price<-1000      //=====그러면 price의 값이 파란색(객체)로 뜨면서 통일됨
      
      
      
      
     3.  super 제어자의 의미 : 조상의 인스턴스 (조상의 객체)
  



상속이란,  
A라는 속성과 행위
B라는 속성과 행위  가 만일 있다면, 

상속을 하면 A의 것이 모두 B의 것이 된다. 
원래의 A와B의 속성은 어떻게 구분할 것인가. 

This를 붙여 구별한다. 

즉 this는 "현 객체의 인스턴스"이다 .








2)






package syj;

class Honggildong{
	Honggildong(){}
	Wallet w = new Wallet ();    //=====이것도 좋지만. 
	
}
class Wallet{
	Wallet (){}
}
public class Study {

	public static void main(String[] args) {
		// TODO Auto-generated method stub

	}

}




22222222222222222222222222222222




package syj;

class Honggildong{
	Honggildong(){
		w = new Wallet ();
	
	}             //======이것이 더욱 자바같은 설계라시이...
	Wallet w;
	
}
class Wallet{
	Wallet (){}
}
public class Study {

	public static void main(String[] args) {
		// TODO Auto-generated method stub

	}
  
  
  
  
  
  
  33333333333333333
  
  
  
  package syj;

class Honggildong{
	Honggildong(){
		w = new Wallet ();
	
	}
	Wallet w;
	void buy() {
		
	}
	
}
class Wallet{
	Wallet (){}
}
public class Study {

	public static void main(String[] args) {
			Honggildong h = new Honggildong(); h.buy();

	}




  
  
  //==============
  
  
  void buy(){}
 에서는 구매를 하려면 
  "물건이라는 데이터를 처리하는 메소드"가 필요한데, 
  그것이 바로 매개변수 .
  
  
  //////
  
  
  package syj;

class Honggildong{
	Honggildong(){
		w = new Wallet ();
	
	}
	Wallet w;
	void buy(Item item ) {    //==========물건을 사는 매개변수 넣고 
		
	}
	
}
class Item {
	Item(){}
}
class Wallet{
	Wallet (){}
}
public class Study {

	public static void main(String[] args) {
		Item i = new Item();	
		Honggildong h = new Honggildong(); h.buy(i);      //========i를 넣음으로써 윗줄까지 완성되면서 물건이 사는것이 된다,. 
			

	}

}

  
 







